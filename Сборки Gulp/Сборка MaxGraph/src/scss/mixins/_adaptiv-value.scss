// Adaptiv property
$maxWidth: 1920;
$maxWidthContainer: 1115;

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type == 1 {
		// if < container
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize}* ((100vw - 320px) / #{$maxWidthContainer -320}));
		}
	} 
    @else if $type == 2 {
		// if > container 
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize}* ((100vw - 320px) / #{$maxWidth -320}));
		}
	}
     @else {
		// Always
		#{$property}: calc(#{$minSize +px} +#{$addSize}*((100vw - 320px) / #{$maxWidthContainer -320}));
	}
}

/* Parameters
 * 1. Property    
 * 2. Start maket value
 * 3. Min value property
 * 4. Mode this 0, 1 or 2

*/

/*//!Example
//* @include adaptiv-value("padding",50,20,1);
//* @include adaptiv-value('font-size', 40, 20, 1);
//* @include adaptiv-value('margin-bottom', 15, 10, 1);
*/

//! For padding
//* 50 this original property
//* 20px this min size padding on 320px
//* 1200px this width limiting container
//* 320px this min width display

//! Example
// .block__body{
// 	padding: calc(20px + (50 - 20) * ((100vw - 320px) / (1600 - 320)));
//  font-size: calc(20px + (25 - 20) * ((100vw - 320px) / (1600 - 320)));
//  margin-bottom: calc(10px + (20 - 10) * ((100vw -320px) / (1600 - 320)));
// }